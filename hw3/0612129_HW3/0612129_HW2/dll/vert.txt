#version 430

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normal;

uniform mat4 Projection;
uniform mat4 ModelView;
uniform vec3 LightPosition;

uniform float Ka;
uniform float Kd;
uniform float Ks;
uniform float alpha;
uniform vec3 la;
uniform vec3 ld;
uniform vec3 ls;

uniform int shadeMode;

out vec3 N;
out vec3 v;
out vec3 n;
out vec4 color;

void main() {
		vec4 v4 = ModelView * vec4(position, 1.0);
		v = vec3(v4); // v4.w;
		N  = normalize(vec3( vec4(normal,0.0)));
		n = vec3(ModelView * vec4(normal,0.0)); 

	if(shadeMode != 1){
		vec3 L = normalize(LightPosition - v);   
		vec3 E = normalize(-v); //EyePos is (0,0,0)  
		vec3 R = normalize(-reflect(L,N));

		color = vec4((Ka * la) 
					+ clamp(Kd * ld * max(dot(N,L), 0.0), 0.0, 1.0) 
					+ clamp(Ks * pow(max(dot(R,E),0.0), alpha) * ls, 0.0, 1.0) 
					, 1.0);
	}
	gl_Position = Projection * ModelView * vec4(position, 1.0);
}
